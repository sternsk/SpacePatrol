"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[325],{325:(t,e,i)=>{i.r(e),i.d(e,{initGame:()=>_});var s=i(25),a=i(947),o=i(716),n=i(850);let l=200;class r{screenAspectRatio;viewBoxToScreenRatio;viewBoxWidth;viewBoxHeight;viewBoxLeft;viewBoxTop;label=document.createElement("HTMLLabelElement");_svgElement;_joystick=new o.Z;constructor(){0!=n.OY.offsetHeight?this.screenAspectRatio=n.OY.offsetWidth/n.OY.offsetHeight:(console.log("gameFrame not properly sized"),this.screenAspectRatio=.8),this.viewBoxWidth=l,this.viewBoxToScreenRatio=this.viewBoxWidth/window.innerWidth,this.viewBoxHeight=this.viewBoxWidth/this.screenAspectRatio,this.viewBoxLeft=-this.viewBoxWidth/2,this.viewBoxTop=-this.viewBoxHeight/2,this._svgElement=document.createElementNS("http://www.w3.org/2000/svg","svg"),this._svgElement.style.position="absolute",console.log(n.OY.clientHeight),this._svgElement.setAttribute("viewBox",`${this.viewBoxLeft}, ${this.viewBoxTop}, ${this.viewBoxWidth}, ${this.viewBoxHeight}`),this._svgElement.setAttribute("tabindex","0");const t=document.createElementNS("http://www.w3.org/2000/svg","rect");t.setAttribute("x",`${this.viewBoxLeft}`),t.setAttribute("y",`${this.viewBoxTop}`),t.setAttribute("width",`${this.viewBoxWidth}`),t.setAttribute("height",`${this.viewBoxHeight}`),t.setAttribute("fill","none"),t.setAttribute("stroke-width","2px"),t.setAttribute("stroke","green"),this._svgElement.appendChild(t),n.OY.appendChild(this._svgElement),n.OY.style.height=`${window.innerHeight}px`,n.OY.appendChild(this._joystick.htmlElement),this.joystick.htmlElement.style.display="none",this.label.style.position="absolute",this.label.style.top="10px",this.label.style.left="10px",this.label.style.border="3px solid darkgreen",this.label.style.backgroundColor="lightgrey",this.label.style.opacity="0.8",this.label.innerHTML="Steuer dein Raumschiff mit den Pfeiltasten oder Touchfeld! <br>Andere online-Spieler erkennst du an ihrem Schild.",n.OY.appendChild(this.label),window.addEventListener("resize",this.handleResize.bind(this))}displayTouchControl(){this.joystick.htmlElement.style.display="block"}get joystick(){return this._joystick}get svgElement(){return this._svgElement}handleResize(){this.updateLabel(),n.OY.style.width=`${window.innerWidth}px`,n.OY.style.height=`${window.innerHeight}px`,this._svgElement.style.width=`${window.innerWidth}px`,this._svgElement.style.height=`${window.innerHeight}px`,this.viewBoxWidth=window.innerWidth*this.viewBoxToScreenRatio,this.viewBoxHeight=this.viewBoxWidth/this.screenAspectRatio,this._svgElement.setAttribute("viewBox",`${this.viewBoxLeft}, ${this.viewBoxTop}, ${this.viewBoxWidth}, ${this.viewBoxHeight}`)}updateLabel(){this.label.innerHTML=`gameFrame.clientWidth doesnt change: ${n.OY.clientWidth}, gameFrame.clientHeight: ${n.OY.clientHeight}<br>\n                                    window.innerWidth is dynamic: ${window.innerWidth}, window.innerHeight: ${window.innerHeight}<br>\n                                    this.viewBoxWidth: ${this.viewBoxWidth}, this.viewBoxHeight: ${this.viewBoxHeight}<br>\n                                    this._svgElement.getAttribute("viewBox"): ${this._svgElement.getAttribute("viewBox")}`}setLabel(t){this.label.innerHTML=t}handleSpacecraft(t,e){switch(e){case"pseudoOrbit":t.pseudoOrbit;break;case"pseudoTorus":t.location.x<this.viewBoxLeft&&(t.location.x=this.viewBoxLeft+l),t.location.x>this.viewBoxLeft+l&&(t.location.x=this.viewBoxLeft),t.location.y<this.viewBoxTop&&(t.location.y=this.viewBoxTop+this.viewBoxHeight),t.location.y>this.viewBoxTop+this.viewBoxHeight&&(t.location.y=this.viewBoxTop)}}}let h=l/45;class c{_gElement=document.createElementNS("http://www.w3.org/2000/svg","g");_type;_color;_id;_touchControlType;_direction=0;_maneuverability=2;_impuls=new a.a;_location=new a.a;_npc=!1;_lastUpdate=Date.now();_scale=1;_label;_labelBorder;constructor(){this._type="rocket",this._color="fl√ºn",this._id="spacecraft",this._touchControlType="spacecraft"}accelerate(t){let e=a.a.fromLengthAndAngle(t,this.direction);this._impuls.add(e)}applyLabel(t){this._labelBorder=document.createElementNS("http://www.w3.org/2000/svg","rect"),t.appendChild(this._labelBorder),this._labelBorder.setAttribute("x",""+6.7*this.scale),this._labelBorder.setAttribute("y",""+-h),this._labelBorder.setAttribute("stroke-width","2px"),this._labelBorder.setAttribute("stroke","grey"),this._labelBorder.setAttribute("vector-effect","non-scaling-stroke"),this._labelBorder.setAttribute("fill","lightgrey"),this._labelBorder.setAttribute("fill-opacity",".8"),this._label=document.createElementNS("http://www.w3.org/2000/svg","text"),t.appendChild(this._label),this._label.setAttribute("font-size",`${h}px`),this._label.innerHTML=`<tspan x="${7*this._scale}">label text not set yet, yet to be written`,setTimeout((()=>{this._labelBorder&&this._label&&(this._labelBorder.style.width=(1.1*this._label.getBBox().width).toString(),this._labelBorder.style.height=(1.1*this._label.getBBox().height).toString())}))}brake(t){const e=this._impuls.length*(1-t);this._impuls=a.a.fromLengthAndAngle(e,this._impuls.angle),this._impuls.length<.01&&(this._impuls=new a.a(0,0))}async gradualBrake(){for(;this._impuls.length;)this.brake(.1),await this.delay(100)}delay(t){return new Promise((e=>setTimeout(e,t)))}handleKeyboardInput(t){t.ArrowLeft&&this.rotate(-this._maneuverability),t.ArrowRight&&this.rotate(this._maneuverability),t.ArrowUp&&this.accelerate(this._maneuverability/100),t.ArrowDown&&this.brake(this._maneuverability/10)}handleTouchControl(t){switch(this._touchControlType){case"butterfly":this._impuls.add(t),this._direction=t.angle;break;case"spacecraft":const e=t.x,i=t.y;this.accelerate(-i),this.rotate(e*this._maneuverability*50)}}pseudoOrbit(t){const e=this._location.distanceTo(t);e<100&&(this._scale=Math.cos(e/50*Math.PI/4)),e>100&&this.impuls.inverse()}rotate(t){this._direction+=t,this._direction=(this.direction%360+360)%360}get direction(){return this._direction}get label(){return this._label}get impuls(){return this._impuls}get lastUpdate(){return this._lastUpdate}get location(){return this._location}get npc(){return this._npc}set location(t){this._location=t}get scale(){return this._scale}get type(){return this._type}set type(t){this._type=t}get color(){return this._color}set color(t){this._color=t}get id(){return this._id}set id(t){this._id=t}get gElement(){return this._gElement}set gElement(t){this._gElement=t}set scale(t){this._scale=t}set touchControlType(t){this._touchControlType="rokket"===t||"rainbowRocket"===t?"spacecraft":"butterfly"}setLabelText(t){this._label&&(this._label.setAttribute("font-family","Arial"),this._label.setAttribute("stroke-width",".05"),this._label.setAttribute("stroke",`${n.yW}`),this._label.innerHTML=t),this._labelBorder&&this._label&&(this._labelBorder.style.width=(1.1*this._label.getBBox().width).toString(),this._labelBorder.style.height=(1.1*this._label.getBBox().height).toString())}update(){this._location.add(this._impuls),this.gElement.setAttribute("transform",`translate (${this._location.x} ${this._location.y}) scale (${this._scale}) rotate (${this.direction+90})`),this._label&&this._labelBorder&&(this._label.setAttribute("transform",`translate(${this._location.x} ${this._location.y})`),this._labelBorder.setAttribute("transform",`translate(${this._location.x-7.5+7*this.scale}, ${this._location.y})`))}updateFromJSON(t){this._direction=t.direction,this._impuls=a.a.fromJSON(t.impuls),this._location=new a.a(t.location.x,t.location.y),this._lastUpdate=t.lastUpdate}toJSON(){return this._lastUpdate=Date.now(),{type:this._type,color:this._color,id:this._id,direction:this._direction,impuls:this._impuls.toJSON(),location:this._location.toJSON(),lastUpdate:this._lastUpdate,npc:this._npc}}static fromJSON(t){const e=new c;return e._type=t.type,e._color=t.color,e._id=t.id,e._npc=t.npc,e._direction=t.direction,e._impuls=new a.a(t.impuls.x,t.impuls.y),e._location=new a.a(t.location.x,t.location.y),e._gElement=s.U.getCraftGElement(e.type),e}updateFrom(t){this._direction=t.direction,this._impuls=t._impuls,this._location=t._location}vanish(){const t=()=>{this._scale>.1?(this._scale-=this._scale/100,this.update(),requestAnimationFrame(t)):(this._gElement.parentNode?.removeChild(this._gElement),this._label&&(this._label.parentNode?.removeChild(this._label),this._labelBorder?.parentNode?.removeChild(this._labelBorder)))};t()}}class d{spacecraft;spacecrafts=[];gameEnvironment;touchControl=!0;serverRequestHandler;constructor(){this.spacecraft=new c,this.gameEnvironment=new r,this.gameEnvironment.displayTouchControl(),this.gameEnvironment.joystick.addObserver((()=>this.handleTouchEndEvent())),n.OY.focus(),this.serverRequestHandler=new p}init(t,e,i){this.spacecraft.type=t,this.spacecraft.color=e,i&&(this.spacecraft.id=i),this.spacecraft.gElement=s.U.getCraftGElement(this.spacecraft.type),this.spacecraft.touchControlType=this.spacecraft.type,this.gameEnvironment.svgElement.appendChild(this.spacecraft.gElement),this.spacecraft.applyLabel(this.gameEnvironment.svgElement),this.gameLoop(),setInterval((()=>{this.syncReality()}),50)}async handleTouchEndEvent(){this.spacecraft.gradualBrake()}gameLoop(){requestAnimationFrame((()=>{this.gameLoop()})),this.touchControl&&this.gameEnvironment.joystick.isTouched&&this.spacecraft.handleTouchControl(this.gameEnvironment.joystick.value),this.spacecraft.handleKeyboardInput(n.as.getKeysPressed()),this.gameEnvironment.handleSpacecraft(this.spacecraft,"pseudoTorus"),this.updateElements()}updateElements(){this.spacecraft.update(),this.spacecraft.setLabelText(`<tspan x="${7*this.spacecraft.scale}"> \n                                        user position: ${this.spacecraft.location.x.toFixed(0)}, ${this.spacecraft.location.y.toFixed(0)} </tspan>\n                                    <tspan x="${7*this.spacecraft.scale}" dy="1em"> \n                                        viewPort position: ${this.spacecraft.gElement.getBoundingClientRect().left.toFixed(0)}, \n                                                            ${this.spacecraft.gElement.getBoundingClientRect().top.toFixed(0)} </tspan>`),this.spacecrafts.length>0&&this.spacecrafts.forEach((t=>{t.npc?t.pseudoOrbit(new a.a(0,0)):this.gameEnvironment.handleSpacecraft(t,"pseudoTorus"),t.update(),t.label&&t.setLabelText(`<tspan x="${7*t.scale}"> \n                                            id: ${t.id} </tspan>\n                                            <tspan x="${7*t.scale}" dy="${h}">\n                                            time since last update: ${Date.now()-t.lastUpdate}</tspan>`)}))}async syncReality(){try{const t=await this.serverRequestHandler.sendData(this.spacecraft.toJSON());if(!Array.isArray(t))return void console.error("Received data is not in the expected format (array)");this.spacecrafts=this.spacecrafts.filter((e=>-1!=t.findIndex((t=>t.id===e.id))||(e.vanish(),!1))),t.forEach((t=>{const e=this.spacecrafts.findIndex((e=>e.id===t.id));if(-1===e||t.npc){if(-1===e){const e=c.fromJSON(t);e.npc||e.applyLabel(this.gameEnvironment.svgElement),this.spacecrafts.push(e),this.gameEnvironment.svgElement.appendChild(e.gElement)}}else this.spacecrafts[e].updateFromJSON(t)}))}catch(t){console.error("Error syncing spacecraft data:",t)}}}class p{async sendData(t){try{const e=await fetch("https://spacepatrol.zapto.org/sync",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)});if(!e.ok)throw new Error("Failed to send data");return await e.json()}catch(t){throw t}}}function _(t,e,i,s){console.log("spaceGame loads"),(new d).init(e,i,s)}}}]);